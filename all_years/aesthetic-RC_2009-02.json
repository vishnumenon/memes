{"body": "I've always thought that if we could start over, using base 12 would have huge advantages. You could have halves, thirds and quarters (as well as sixths, but they aren't as useful), written with a finite decimal expansion. The next best number after 12 for this regard would be 60, since with that you also get fifths. \n\nNote that I believe having lower roots is more useful than higher roots. Hence 14 (7 * 2) would be less useful than 10 (5 * 2). \n\n&gt; Also, in computer languages, the minimal rx value has a place in storage space and memory, but for real world applications, reducing numbers to three symbols doesn't save us effort, since it is easy to remember 5, 10, or 12 symbols.\n\nFor humans, the magic number seems to be 7 \"things\". Eg, quickly count how many a's are in the following lines:\n\na a a \n\na a a a a a\n\na a a a a a a a\n\na a a a a a a \n\na a a a a a a a a a\n\nMost people are able to instantly count groups up to about 7. Same with memorization, we can memorize about 7 digits, but then it becomes much harder. For example, I can memorize 7933452 with just one look, however 144782990113 is a lot harder.\n\nAlso, it doesn't matter how many combinations the digits have, it always seems to be seven or so *digits*. Eg memorizing  101100111000000111000000 is more difficult than memorizing B381C0 even thought they are the same number.\n\nThe main problem of too many digits would probably come from having to learn the multiplication timestables. b12 has 144 combinations, while b60 would have 3600 combinations. ", "gilded": 0, "created_utc": "1233458295", "subreddit": "programming", "score": 1, "controversiality": 0}
{"body": "why don't more people know that? M T W R F Sa Su. sheesh.", "gilded": 0, "created_utc": "1233519065", "subreddit": "funny", "score": -1, "controversiality": 0}
{"body": "L i k e    a    w i s d o m    t o o t h   ?", "gilded": 0, "created_utc": "1233532634", "subreddit": "reddit.com", "score": 2, "controversiality": 0}
{"body": "I've never heard of this or seen it used anywhere. I've always seen it M T W T F with the second T obviously being Thursday because it's between W and F. What country are you from?", "gilded": 0, "created_utc": "1233536167", "subreddit": "funny", "score": 1, "controversiality": 0}
{"body": "K i c k a s s", "gilded": 0, "created_utc": "1233630768", "subreddit": "business", "score": 1, "controversiality": 0}
{"body": "Sorry.  Their are Nobel Prizes, then there are is the sinlge, \"Sveriges Riksank P E S M of Alfred Nobel\".\r\n\r\n&gt; It is commonly referred to as the Nobel Prize in Economics[2] and it is identified with the Nobel Prizes, although it is not one of the five Nobel Prizes (in Physics, Chemistry, Physiology or Medicine, Literature, and Peace) which were established by the will of Alfred Nobel in 1895.[1][3][4][5][6] \r\n\r\nhttp://en.wikipedia.org/wiki/Nobel_Prize_in_Economics\r\n", "gilded": 0, "created_utc": "1233688056", "subreddit": "politics", "score": 0, "controversiality": 0}
{"body": "&gt;Not only are you implementing the layout poorly\n\nIf the layout *works* for the overwhelming majority of users, then the layout has been done correctly.\n\n&gt;you've also just damaged its SEO value.\n\nhttp://www.highrankings.com/forum/index.php?showtopic=17496&amp;st=0\n\nhttp://www.seonotepad.com/uncategorized/seo-and-html-tables/\n\n\"But tables are still in use, and are not currently in danger of obsolescence.  Spiders which crawl websites examine the code of a page, and index that page regardless of tables, even nested tables.  Using them does not reduce your rating with search engines, as many still claim. \"\n\n&gt;feel free to look at how Google implements them.\n\nFront page: the primary page content, splitting it into three cells, keeping the elements aligned easily, regardless of user's font sizing.\n\nOn search results: their top banner and the input form. Another nested table for the form. The page advance \"G O O G L E 1 2 3 4\" at the bottom. (Oh, but wait, we could do that with a div and 10 floats.. but it would only mess up in IE and several other browsers)\n\nNone of that is \"tabular data\".\n\n[ShowTables bookmarklet here](http://www.sam-i-am.com/work/bookmarklets/dev_debugging.html)\n\nCSS tables will make markup tables obsolete, but markup tables are still easier for inexperienced users to get content on the web. The web is not supposed to be the domain of elitists turning their nose up at those who wish to publish content. \n\nWhen IE8 replaces 6 and 7, then I'll happily use display:table-cell; and litter my markup with &lt;div&gt; instead of &lt;td&gt;.\n", "gilded": 0, "created_utc": "1233691855", "subreddit": "programming", "score": 1, "controversiality": 0}
{"body": "THERE IS A BUILT IN FUNCTION NAMED \"____import____()\". iT IS SPELLED: UNDERSCORE UNDERSCORE i m p o r t UNDERSCORE UNDERSCORE. IN YOUR ORIGINAL BLOG POST, YOU RE-IMPLEMENT THAT FUNCTION IN YOUR SOLUTION:\n\n&gt;def LoadScript(filePath):\n  script = open(filePath, 'r').read()\n  codeObject = compile(script, filePath, \"exec\")\n  scriptGlobals = {}\n  eval(codeObject, scriptGlobals, scriptGlobals)\n  return scriptGlobals\n\nSEE THIS:\n\nspam = ______import______('spam', globals(), locals(), [], -1)\n\nIT IS A LOT SIMPLER. YOU DIDN'T HAVE TO RE-IMPLEMENT IT.\n\nREAD ABOUT IT \nhttp://docs.python.org/library/functions.html?highlight=__import__#__import__\n\nPLEASE READ THE PYTHON DOCUMENTATION, A BOOK ON PYTHON, ANYTHING, BEFORE YOU CODE -- BEFORE YOU GIVE A PRESENTATION AT PYCON. (Oh the lulz...)\n\nYou are real close to getting Baled out.\n\n[edit]: there are added benifits to using the built in ____import____() function.\n\n* it will compile source code files to byte code files (.pyc), it will import the byte code file if one is available. Compilation to bytecode will happen only once, unless you modify the original source code file. Your solution compiles the source code to byte code EVERY DAMN TIME YOU IMPORT!\n\n* the built in function will import zipped modules and c-extension modules (*.so or *.dll), file.read() and exec() won't do that for you.", "gilded": 0, "created_utc": "1233761449", "subreddit": "programming", "score": 2, "controversiality": 0}
{"body": "U M B S H I T D", "gilded": 0, "created_utc": "1233956152", "subreddit": "pics", "score": 13, "controversiality": 0}
{"body": "[wow! how did they get the letters v i r u and s into hex code? haxors!](http://www.atomicsub.net/wp-content/uploads/2009/01/20m1-300x225.jpg)", "gilded": 0, "created_utc": "1233956427", "subreddit": "technology", "score": 10, "controversiality": 0}
{"body": "Actually, the part that leads me to believe it was one of the first four jumbled words was the very next sentence: \"On Thanksgiving Day, R U S U Y was one of the jumbled words.\"", "gilded": 0, "created_utc": "1233978336", "subreddit": "pics", "score": 1, "controversiality": 0}
{"body": "I D K W T fuck T L I.", "gilded": 0, "created_utc": "1233990795", "subreddit": "photography", "score": -6, "controversiality": 0}
{"body": ": meh-b  ( x y a b -- x a by )  rot * ;\n\n: meh-c  ( x y a b c -- x y a b cxy )  4 pick 4 pick * * ;\n\n: meh   ( x y a b c -- n )  meh-c &gt;r meh-b &gt;r * r&gt; r&gt; + + ;\n\n\n: dirty-mind?  ( -- b )  -1 ;", "gilded": 0, "created_utc": "1234069394", "subreddit": "programming", "score": 2, "controversiality": 0}
{"body": "Actually they didn't even make it to space! but... wait a minute... then... it means US and al are covering it too, because of course NASA, Air Force and friends all could track the ship orbiting! they all knew it from the beginning! &gt;It's a WORLD WIDE CONSPIRACY! \n\nOK, repeat after me now : F U C K T A R D S CONSPIRATIONISTS. I'm over sick with this shit. Could you please care about actually important stuff, like say, the crisis? Please?", "gilded": 0, "created_utc": "1234099150", "subreddit": "reddit.com", "score": 1, "controversiality": 0}
{"body": "I think I would do that one this way if I didn't want to use local variables; after all, it doesn't recurse, and Forth global variables aren't global in the way they are in normal languages.\n\n    variable x  variable y\n    variable a  variable b  variable c\n    : meh  c ! b ! a ! y ! x !\n      a @ x @ *  b @ y @ * +   c @ x @ * y @ * + ;\n\nBut most of the time I would try to refactor the caller so I didn't have a word (or function! In any language!) with five parameters.  For example, maybe `a`, `b`, and `c` live together in some data structure representing a bilinear function (you forgot the Z-intercept though); in that case you can just get them out of that data structure:\n\n    : fun create , , , ;  : a 2 cells + ;  : b cell+ ;  : c ;\n    variable x  variable y\n    : meh ( f x y -- fxy )  y ! x ! &gt;r\n      x @ y @ * r@ c @ *  x @ r@ a @ * +  y @ r&gt; b @ * + ;\n\n(I haven't tested that version.)\n\nMaybe `x` and `y` live in a `point` data structure together too.  (I'm defining the data structures by hand because it's good enough for a short example, and I'm not familiar with struct-defining words in ANS, but there are struct-defining words in every mature Forth implementation.)\n\n    : point create , , ;  : x cell+ ;  : y ;\n    : meh ( f p -- f-of-p )  &gt;r\n      dup a @ r@ x @ *  over b @ r@ y @ * +  swap c @ r@ x @ * r&gt; y @ * + ;\n\nExample usage of the above:\n\n    2 3 point p1  ok\n    4 5 6 fun f1  ok\n    f1 p1 meh . 59  ok\n\nOr maybe you should just use the local variables implementation of your Forth.\n\n    : meh { x y a b c } a x *  b y * +  c x * y * + ;\n\nI wasted a lot of time in the past trying to figure out how to write stuff in Forth without using variables (because of the idea that global variables are dirty).  Now I try not to keep more than one \"variable\" on each stack, because it gets too confusing.", "gilded": 0, "created_utc": "1234100651", "subreddit": "programming", "score": 3, "controversiality": 0}
{"body": "H e r o i n..............gawd!", "gilded": 0, "created_utc": "1234117625", "subreddit": "reddit.com", "score": 1, "controversiality": 0}
{"body": "His clarification on the management of the  Stimulus Package (great name btw) was gloriously straightforward, but I wish he wouldn't speak so s l o w l y . ", "gilded": 0, "created_utc": "1234247139", "subreddit": "politics", "score": 12, "controversiality": 0}
{"body": "I can totally understand not re-mapping something like throttle (an analog control) to the X button (a digital control) ... I don't know why anyone would want to do that anyways.  The xbox 360 does have 2 analog sticks though, how hard can it be to just swap those?  I was thinking more about the A B X Y RB LB RT LT buttons and maybe even the directional pad.  I find it hard to believe that a simple re-mapping routine for these buttons (digital to digital) would add so much coding/QA time that it would make it a valid reason to not do it.\n", "gilded": 0, "created_utc": "1234277762", "subreddit": "gaming", "score": 1, "controversiality": 0}
{"body": "You have an interesting understanding of anatomy - let me spell this out for you slowly:\n\n     T y p i n g     u s e s     t h e     f i n g e r s.", "gilded": 0, "created_utc": "1234319974", "subreddit": "worldnews", "score": 1, "controversiality": 0}
{"body": "It's also fucking c r e e p y", "gilded": 0, "created_utc": "1234387375", "subreddit": "WTF", "score": 3, "controversiality": 0}
{"body": "I N S A N I T Y....that was a fun read though", "gilded": 0, "created_utc": "1234452918", "subreddit": "atheism", "score": 1, "controversiality": 0}
{"body": "not sure how that's relevant, does it not work the same for every program i print from? for instance, if i were using adobe reader to print a document or microsoft word, when i select the print properties i still can't see the c m y k info.", "gilded": 0, "created_utc": "1234457571", "subreddit": "AskReddit", "score": 2, "controversiality": 0}
{"body": "A W E S O M E ! ! ! !", "gilded": 0, "created_utc": "1234556322", "subreddit": "gaming", "score": 2, "controversiality": 0}
{"body": "I still think that is lazy. Kinda like putting your fingers in your ears and yelling \"NO NO NO, DO NOT WANT TO HEAR... BLABLABLABLAAAA!!!\".\n\n\n**Edit**\n\nOh.  I forgot about the Reddit hivemind mentality.\n\n\nB\nR\nA\nC\nE\n. . .\n\nF\nO\nR\n. . .\n\n\nD O W N V O T E S ! ! ! !\n\n\n\n", "gilded": 0, "created_utc": "1234642397", "subreddit": "funny", "score": 3, "controversiality": 0}
{"body": "Lemme second that. Bill Stimuluswiki and me are grabbing some piergis later.\n\nSeriously, what's the old joke, about the eye doctor in Buffalo\n\nEye doctor asks his patient if he knows what the last line of the chart is, with has the letters \"L E N G I N K E W I C Z\". The patient says \"Know em, he's my uncle!\"\n\nZing...", "gilded": 0, "created_utc": "1234760780", "subreddit": "politics", "score": 4, "controversiality": 0}
{"body": "Fundeps are still really useful for defining bijections or families where there is more than one thing determined by a relation.\r\n\r\nclass Foo a b c d e | a b c -&gt; d e, a b d -&gt; c e, a b e -&gt; c d, a c d -&gt; b e, a d e -&gt; c d, a c e -&gt; b d, b c d -&gt; a e, b d e -&gt; a c, c d e -&gt; a b\r\n\r\nis a pain in the neck to define with type families and these cases actually come up if you want something tightly enough defined that type inference is helpful for things like adjunctions, etc.", "gilded": 0, "created_utc": "1234792797", "subreddit": "haskell", "score": 1, "controversiality": 0}
{"body": "W W W W W W W W WWHO GIVES A FUCK", "gilded": 0, "created_utc": "1234826216", "subreddit": "science", "score": -10, "controversiality": 0}
{"body": "    A H M A D I N E J A D\n\n    R O C K E F E L L E R\n\nBoth names have the same amount of letters. Coincidence? I think not.", "gilded": 0, "created_utc": "1234932302", "subreddit": "worldpolitics", "score": 12, "controversiality": 0}
{"body": "http://freeshells.ch/~revence/par.txt\n\nWrite Me A Small Program\n************************\n\n\nFirst, a pet peeve off my chest.\nDon't let me catch you saying anything like `The multi-core future'. Multi-core\nis not in the future. How many cores do you have in your current computer? How\nmany in the computers being sold _right now_? How many CPUs?\nIf you ever again say `future' and `multi-core' in the same paragraph, and I\ncatch you. I'm exempted, of course. Back to the issue.\n\nThere is necessary buzz about cores and stuff.\nRight now, however, your computer is 80% idle. That's important to note. So you\ndon't need the second core, do you?\nDon't be silly. No computers are being released today (which you'll buy\ntomorrow) with less than two CPUs in them. And no CPUs are being released today\n(which you'll buy tomorrow) with less than two cores. So, you don't have a\nchoice in this. Four cores, already. That may be why your computer is even so\nidle.\n\nThe programmer is being assaulted, because the individual cores are slower in\ngeneral, on a multi-core thing than they are without coupling (either by design\nor due to sync overhead). So we must parallelise. Any distant excuses we had are\ngoing to be thoroughly dead in a short time. Right now, they are only bleeding.\nEvery single one of the million cores will be maxing out on `1 * 1`. :o)\nAnd I pity whoever will not be executing every `1 * 1` in parallel.\n\nCompilers should, of course, do most of this parallelism.\nBut most can never get to do it, because they can't be sure the * function\ndoesn't affect a global var, on which the next call expects to depend.\nGoing for a pure language is no longer for the wide-eyed grecophiles (as it was\nten years ago). I hate their silly Greek and TeX papers. But I am a practical\ncoder who wants to put stuff out the door, and then go off to the coast. Hence\nwhy I use their nonsense, even though grudgingly.\n\nCan you, in your favourite language, show me the easiest way to parallelise the\nfollowing program (written in C)? I am just genuinely curious.\n\n    int gimme(int x)\n    {\n        return x * x;\n    }\n\n    int main(void)\n    {\n        int i = 2, j = 4;\n        int a = gimme(i),\n            b = gimme(j);\n        return a * b;\n    } \n\nBy `easy' I mean `easy', not `short'. You can take forty lines for each line\nabove, as long as it's easy.\nI assume that the calls to gimme should be parallel, since they don't depend on\nthemselves. Or at least can you tell me the language that is readiest to do\nauto-parallelism for me (even without an example). This is how you will know\nwhether or not you are ready for today.\n\nAs a side note:\nIt's funny how easy that is in Haskell. Damn it, you thought this wasn't going\nto be about Haskell? What's wrong with you? Can't you yet _infer_ where I am\nheaded? You thought this would be about ... what, x86 assembly? If you can't\ntake, you might as damn well tell me and GET OUT OF MY CLASS!!! I'M NOT HERE TO\nHOLD YOUR HAND - WE ARE NOT LOVERS! I'VE NEVER EVEN HAD A LOVER, AND YOU ARE\nLETTING ME RAIN MY FRUSTRATION ON YOU, MAINLY BECAUSE ALL THE GUYS IN #haskell\nARE ALWAYS TALKING ABOUT THEIR GIRLFRIENDS/WIVES, SO THEY ARE GREEK-LOVING\nLAMBDA FREAKS WHO ACTUALLY GET LAID, BELIEVE IT OR NOT!!!\n\nOkay. Where was I? In Haskell, yes. In Haskell, this is what happened when I\nwanted to evaluate two `1 * 1` expressions in the REPL:\n\n    Prelude&gt; :m + Control.Parallel\n    Prelude Control.Parallel&gt; -- Add some module for the par function.\n    Prelude Control.Parallel&gt; (1 * 1) `par` (1 * 1)\n    1\n    Prelude Control.Parallel&gt;\n\nThose two were evaluated in parallel. Believe it. You don't? Here's a\nmore-involved example:\n\n    Prelude Control.Parallel&gt; :m + System.IO.Unsafe\n    Prelude Control.Parallel System.IO.Unsafe&gt; let str1 = \"Determinism\"\n    Prelude Control.Parallel System.IO.Unsafe&gt; let str2 = \"Non-determinism\"\n    Prelude Control.Parallel System.IO.Unsafe&gt; let justPrint = unsafePerformIO .\n    putStrLn\n    Prelude Control.Parallel System.IO.Unsafe&gt; (justPrint str1) `par` (justPrint\n    str2)\n    NoDne-tdeermitneirsmmi\n    nism\n    ()\n    Prelude Control.Parallel System.IO.Unsafe&gt;\n\nWhat happened there is that I forced (hence the unsafePerformIO) this program \nto _prove_ that, indeed, par ran things in parallel. And you know what came out\nof an attempt to print \"Determinism\" and \"Non-determinism\" in parallel?\n\n    NoDne-tdeermitneirsmmi\n    nism\n\nBelieve it.\n\n    --    LeCamarade\n        r e v e n c e   a t   f r e e s h e l l s   d o t   c h\n", "gilded": 0, "created_utc": "1235029397", "subreddit": "programming", "score": 104, "controversiality": 0}
{"body": "You must be a real joy to watch movies with.\n\nAlso you dropped some letters, here you go:\n\nD L Y O W I \n\nShift key is right there at both the lower-right and lower-left of your keyboard.", "gilded": 0, "created_utc": "1235062601", "subreddit": "entertainment", "score": 3, "controversiality": 0}
{"body": "B a l a n c e d !\nSome things need to be addressed a equals = eye for eye.", "gilded": 0, "created_utc": "1235104215", "subreddit": "reddit.com", "score": 2, "controversiality": 0}
{"body": "I need a life :(\nI know that this probably is not valid haskell code, but I hope it illustrates why this style of code in haskell is not quite elegant.\n\n    a `par` b `par` c `par` d `pseq` print_proc a b c d where\n       a = proc \" to \"\n       b = proc \" infinity \"\n       c = proc \" and \"\n       d = proc \" beyond \"\n       proc x = x:proc x\n       print_proc w:ws x:xs y:ys z:zs = do \n           print w x y z\n           print_proc ws xs ys zs\n           return\n\nAnyway, if by elegance it is meant a combination of both easy on the eye, clear and sticking to the core ideal of the language, there is no current elegant solution. Or language capable of expressing concurrency, for that matter. It is both an expression and modelling problem. There are partial solutions - like what erlang does or from what I read about data parallel haskell. But hey, the beast evolves.", "gilded": 0, "created_utc": "1235149402", "subreddit": "programming", "score": 2, "controversiality": 0}
{"body": "aussie golfer wins! \r\n\r\nF A T A L I T Y", "gilded": 0, "created_utc": "1235246122", "subreddit": "AskReddit", "score": 1, "controversiality": 0}
{"body": "S S S S S...\n   A A A A A...\n      F F F F F...\n       E E E E E E..\n           T T T T T T...\n              Y Y Y Y \nSAFETY DANCE!!", "gilded": 0, "created_utc": "1235327027", "subreddit": "WTF", "score": 2, "controversiality": 0}
{"body": "Not Scary - \n\n\nF U C K I N G   A W E S O M E\n\nMost.\nEver.", "gilded": 0, "created_utc": "1235351080", "subreddit": "videos", "score": 0, "controversiality": 0}
{"body": "I try to tell my husband she is a mega b i t c h, but all he sees is H O T.", "gilded": 0, "created_utc": "1235426697", "subreddit": "AskReddit", "score": 2, "controversiality": 0}
{"body": "You are not familiar with Charlie, his work, his reputation and his style, are you?\n\nC h a r l i e   D e m e r j i a n", "gilded": 0, "created_utc": "1235507730", "subreddit": "reddit.com", "score": 1, "controversiality": 0}
{"body": "\"A B C D E F G...\"", "gilded": 0, "created_utc": "1235542175", "subreddit": "comics", "score": 5, "controversiality": 0}
{"body": "\"Luckily, she discovered the art of singing and had a natural talent for it. Having perfect pitch she could sing back exactly what she heard at the age of four.\"\n\nI sing opera, this is NOT the definition of perfect pitch, this is pitch matching. Perfect pitch is being able to identify the note name with only hearing it. so for example, if I play for you a C#6 on the piano, you can tell me, \"you are playing a C#6, or a c# two octaves above C#4\" Ear training is the ability to sing a melody based on one's understanding of the major and minor key signatures, and how chord patters create a melody. \nAn easy way to learn this is with solfedge\ndo re mi fa so la ti do\nor c d e f g a b c in the scale of c-major. \n", "gilded": 0, "created_utc": "1235631297", "subreddit": "reddit.com", "score": 1, "controversiality": 0}
{"body": "P U L E A S E !  Isn't there a Bimbo sub-reddit for this useless info?", "gilded": 0, "created_utc": "1235666039", "subreddit": "reddit.com", "score": 1, "controversiality": 0}
{"body": "E P I C F A I L U R E", "gilded": 0, "created_utc": "1235678660", "subreddit": "reddit.com", "score": 2, "controversiality": 0}
{"body": "A S S H O L E ...type it fast", "gilded": 0, "created_utc": "1235859596", "subreddit": "Music", "score": 1, "controversiality": 0}
{"body": "ok, thanks\r\n\r\nedit: wait... that doesnt work. I am looking at a product that is listed as 34 x 15 x 12 ....and the 34 measurement is obviously length.\r\n\r\nedit: I figured it out. I ggogled a toolbox &amp; looked at the measurements...and it was actually listed with L x W x H.   THAT is the order it seems. \r\n\r\n", "gilded": 0, "created_utc": "1235860179", "subreddit": "AskReddit", "score": 1, "controversiality": 0}
{"body": "DO THE D A N C E, 1 2 3 4 FIGHT", "gilded": 0, "created_utc": "1235860936", "subreddit": "Music", "score": 1, "controversiality": 0}
